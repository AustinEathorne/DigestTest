# Workflow Name
name: Generate Asset Digest

# Event
on:
  pull_request:
    types:
      - closed
    branches:
      - master
    paths:
      - "Assets/**/**.png" 
      #- "Assets/_Overworld/Textures/World/**/**.png"
      #- "Assets/AssetBundles/ChapterArtBundles/**/**.png"

# Environment
env:
  MAIN_DIR: main #The directory where the main repo is cloned
  TOOLS_DIR: tools #The directory where the digest tools repo is cloned
  WIKI_DIR: wiki #The directory where the digest wiki repo is cloned

# Jobs
jobs:
  build_asset_digest:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ env.GITHUB_SHA }}
          path: ${{ env.MAIN_DIR }}
      
      - name: Checkout Wiki
        uses: actions/checkout@v3
        with:
          repository: AustinEathorne/DigestTest.wiki
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }} #${{ secrets.GH_PAT }}
          path: ${{ env.WIKI_DIR }}
      
      - name: Checkout Digest Builder Tools
        uses: actions/checkout@v3
        with:
          repository: AustinEathorne/AssetDigestBuilder
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }} #${{ secrets.GH_PAT }}
          path: ${{ env.TOOLS_DIR }}
        # both secrets.GH_PAT and secrets.GITHUB_TOKEN can be used to authenticate with the GitHub API
        # and perform various actions on a repository, the difference is that secrets.GH_PAT is a token
        # created by the user and secrets.GITHUB_TOKEN is a built-in token that GitHub provides and
        # automatically manages for the user.
       
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
  
      - name: Install Python Modules
        run: |
          pip install --upgrade pip
          pip install -r ${{ env.DEVOPS_DIR }}/AssetDigestBuilder/requirements.txt
       
      - name: Run Builder Script
        run: python "{{ env.DEVOPS_DIR }}/AssetDigestBuilder/main.py"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed?
          MAIN_DIR: ${{ env.MAIN_DIR }}
          WIKI_DIR: ${{ env.WIKI_DIR }}
          TOOLS_DIR: ${{ env.TOOLS_DIR }}
          
      
      #- name: Install Python Dependencies
        # Installation action - https://github.com/marketplace/actions/python-dependency-installation
        #uses: py-actions/py-dependency-install@v4
        #with:
        #  path: ${{ env.DEVOPS_DIR }}/AssetDigestBuilder/requirements.txt
        #
        #run: |
        #  echo 'Install Python Modules`
        #  pip install --upgrade pip
        #  pip install -r ${{ env.TOOLS_DIR }}/AssetDigestBuilder/requirements.txt
       
      #- name: Run Script
      #  uses: actions/python-action@v1
      #  with:
      #    entry-point: "{{ env.DEVOPS_DIR }}/AssetDigestBuilder/main.py" 
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed if the main repo is cloned locally? Can't we just operate directly on the repo?
       
      # python ${{ env.TOOLS_DIR }}/AssetDigestBuilder/main.py
      #- name: Run Digest Builder
      #  run: python ${{ env.TOOLS_DIR }}/main.py
      #  shell: sh
